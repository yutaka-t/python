■プロジェクト作成
　適当にディレクトリを作ってその中で、コマンド実行
　$ django-admin startproject mysite .

  ※最後に . をつけることで、余計なディレクトリを作成しないようになる
  　例）
        .なし :　<実行ディレクトリ>/mysite/mysite/manage.py
        .あり :　<実行ディレクトリ>/mysite/manage.py

■外側の mysite/ ルートディレクトリは、このプロジェクトのただの入れ物です。
　⇒適当に名前を変えても問題ない

■開発用サーバの起動
　$ python manage.py runserver
　⇒ポート番号を変える場合 : python manage.py runserver 8080

■アクセス確認
　⇒ラウザで http://127.0.0.1:8000/ にアクセス

■アプリケーション作成
　⇒アプリケーションは Python path のどこにでも置けます
　⇒以下の例では、manage.py のすぐ隣にに作成する。
　⇒manage.py と同じディレクトリに入って、以下のコマンド実行
　　⇒python manage.py startapp polls

■polls/views.py に以下を記載
    =========================================================================
    from django.http import HttpResponse


    def index(request):
        return HttpResponse("Hello, world. You're at the polls index.")
    =========================================================================

■urls.py 作成
　⇒上記で作成したビューを呼ぶために、 URL を対応付けする
　⇒polls/urls.py
   =========================================================================
    from django.urls import path

    from . import views

    urlpatterns = [
        path('', views.index, name='index'),
    ]
    =========================================================================

 ■ルートのurlコンフに、polls.urls モジュールを追加
　⇒mysite/urls.py に django.urls.include のimportを追加
　⇒mysite/urls.py　urlpatterns のリストに include() を挿入
   =========================================================================
    from django.contrib import admin
    from django.urls import include, path

    urlpatterns = [
        path('polls/', include('polls.urls')),
        path('admin/', admin.site.urls),
    ]
    =========================================================================

  ■検索や追加例
  　Question.objects.filter(id=1) # id指定
    Question.objects.filter(question_text__startswith='What')　# 先頭文字

    親を取得して子を作成
        Question : Choice = 1 : 多　の関係の場合、_set を付けると、内容を登録できる
        そのとき Choice の先頭文字は 小文字になる

        q = Question.objects.get(pk=1)
        q.choice_set.create(choice_text='The sky', votes=0)

